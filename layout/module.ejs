<%
if (this.hasOwnProperty('UserConfig') && UserConfig)
   return;

hexo.__ = function(item)
{
  return function(str,opt)
  {
    var s = __(item?item + '.' + str:str);
    return s?s:(opt===false?false:str);
  }
}

usercfg.load_widgets = function(name,item,index)
{
    if (name.search('_') >= 0 && index)
	return "";
    var str="<section id='" + name + "_widget'>";
    var widgets = [];
    var theme_widgets = [];
    if (usercfg.widgets && usercfg.widgets[name])
        theme_widgets = usercfg.widgets[name];
    if (item && item.widgets && item.widgets[name])
    {
        item.widgets[name].forEach(function(widget){
            if (widget == '+')//+代表加载主题指定的widgets
            {
                theme_widgets.forEach(function(n){
                    if (widgets.indexOf(widget) == -1)
                        widgets.push(n);
                })
            }
            else if (widgets.indexOf(widget) == -1)
                widgets.push(widget);
        })
        
    } else if (!item || item.layout !== 'page' || name.search('_') < 0)//对于页面默认不加载文章前后相关的widgets
        widgets = widgets.concat(theme_widgets);

    widgets.forEach(function(widget){
	str += '<div class="widget" id="widget_' + name + '_' + widget + '>">';
	str += partial('_widget/' + widget,{pos: name,item: item});
	str += '</div>';
    });

    str +='</section>';
    return str;
}

if (hexo.hasOwnProperty('env') && hexo.env.hasOwnProperty('debug'))
    hexo.debug = hexo.env.debug;

this.UserConfig = _.extend({},hexo.config,usercfg);
%>
